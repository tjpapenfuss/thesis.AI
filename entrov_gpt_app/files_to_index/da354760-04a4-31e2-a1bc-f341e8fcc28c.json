{
    "URL": "https://aws.amazon.com/de/partners/success/vorwerk-stormforger/",
    "Time stamp": "2023-05-30",
    "Summary": "Vorwerk, a family-owned business that produces high-quality household appliances, launched Cookidoo\u00ae in 2016, which connected the Thermomix\u00ae to a world of 60,000 official recipes. To meet the growing demand for Cookidoo\u00ae, Vorwerk built an Edge Layer consisting of hundreds of microservices in multiple AWS regions (including Europe, Sydney, and US East) to bring Cookidoo\u00ae closer to customers. Vorwerk started using AWS in 2015 with Elastic Beanstalk and has since adopted services like DynamoDB, S3, and CloudFront. Vorwerk's teams are encouraged to rely on SaaS products for every step of their development process. Performance testing is a crucial practice to ensure Vorwerk\u2019s high quality standards.\n\nVorwerk used to rely on interconnected, monolithic components which began to cause problems with organizational scaling. A self-contained systems (SCS) approach was chosen to decouple Vorwerk\u2019s services and components to increase its ability to innovate at a significantly faster speed. To support teams at Vorwerk and allow them to focus on business value delivery at the demanded quality, Vorwerk's teams are encouraged to rely on SaaS products like StormForge for Performance Testing for every step of their development process. StormForge is an integral part of Vorwerk\u2019s production readiness strategy. Automated load and performance tests are being performed on a regular basis by integrating them into the development processes and continuous delivery pipelines (CI/CD). \n\nStormForge empowers DevOps and agile organizations to embrace automated and continuous performance testing of AWS hosted applications to comply to the AWS Well-Architected Framework (Performance Efficiency Pillar). Performance testing helps to explore the whole power of the AWS Cloud infrastructure by learning about a distributed system\u2019s behavior and how to improve it. Vorwerk benefits from an increase in software quality and its teams gaining more confidence in systems they are responsible for. As a result, a culture for performance, efficiency, and sustainable resource utilization evolves naturally."
}